apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
  name: eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: eg
spec:
  gatewayClassName: eg
  listeners:
    - allowedRoutes:
        namespaces:
          from: Same
      name: http
      port: 80
      protocol: HTTP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: http-filter-redirect
spec:
  parentRefs:
    - name: eg
  rules:
    - filters:
        - requestRedirect:
            path:
              replaceFullPath: /lobbies
              type: ReplaceFullPath
            statusCode: 302
          type: RequestRedirect
      matches:
        - path:
            type: PathPrefix
            value: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: words
spec:
  selector:
    matchLabels:
      app: words
  template:
    metadata:
      labels:
        app: words
    spec:
      containers:
        - image: ghcr.io/deesejohn/words:d5bac55@sha256:4bc919d97415bbdb996ac123f0fb379bc13a9f487d827c75268948130bebdb9f
          livenessProbe:
            grpc:
              port: 50051
          name: server
          ports:
            - containerPort: 50051
---
apiVersion: v1
kind: Service
metadata:
  name: words
spec:
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
  selector:
    app: words
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games
spec:
  selector:
    matchLabels:
      app: games
  template:
    metadata:
      labels:
        app: games
    spec:
      containers:
        - env:
            - name: NATS_HOST
              value: nats
            - name: REDIS_HOST
              value: games-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: games-redis
            - name: WORDS_ADDRESS
              value: words:50051
          image: ghcr.io/deesejohn/games:d5bac55@sha256:0c53d68d3cd4061e2a493577aed857a9502bc58b66df05a327d7074e2892ed72
          livenessProbe:
            grpc:
              port: 50051
          name: server
          ports:
            - containerPort: 50051
---
apiVersion: v1
kind: Service
metadata:
  name: games
spec:
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
  selector:
    app: games
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-bff
spec:
  selector:
    matchLabels:
      app: games-bff
  template:
    metadata:
      labels:
        app: games-bff
    spec:
      containers:
        - env:
            - name: GAMES_HOST
              value: games:50051
            - name: HOST_PREFIX
              value: /api/games
            - name: NATS_HOST
              value: nats
          image: ghcr.io/deesejohn/games-bff:d5bac55@sha256:0098801b88d58d67197a087738331bd1c5a9d54511748cbff2dcfb4f8b159f43
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8000
            initialDelaySeconds: 5
          name: server
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: games-bff
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8000
  selector:
    app: games-bff
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: games-bff-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: games-bff
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /api/games/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-spa
spec:
  selector:
    matchLabels:
      app: games-spa
  template:
    metadata:
      labels:
        app: games-spa
    spec:
      containers:
        - image: ghcr.io/deesejohn/games-spa:d5bac55@sha256:53eabe67c72422ec62615304cc862490ac580b48eebcdd0cf65479bbe8bedb6d
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
          name: server
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: games-spa
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: games-spa
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: games-spa-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: games-spa
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /games
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies
spec:
  selector:
    matchLabels:
      app: lobbies
  template:
    metadata:
      labels:
        app: lobbies
    spec:
      containers:
        - env:
            - name: ASPNETCORE_FORWARDEDHEADERS_ENABLED
              value: "true"
            - name: DOTNET_HOSTBUILDER__RELOADCONFIGONCHANGE
              value: "false"
            - name: GAMES_HOST
              value: http://games:50051
            - name: HOST_PREFIX
              value: /api/lobbies
            - name: PLAYERS_HOST
              value: http://players
            - name: REDIS_HOST
              value: lobbies-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: lobbies-redis
          image: ghcr.io/deesejohn/lobbies:d5bac55@sha256:9c90ba55426fc5b34b6a144466366518cbbebcad1c240adc0f611048cd2591d1
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
          name: server
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: lobbies
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: lobbies-api-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: lobbies
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /api/lobbies/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies-spa
spec:
  selector:
    matchLabels:
      app: lobbies-spa
  template:
    metadata:
      labels:
        app: lobbies-spa
    spec:
      containers:
        - image: ghcr.io/deesejohn/lobbies-spa:d5bac55@sha256:f6cc7019d93de64260d44694cb7c4cd0746cb33d789075bacae7dc1fdab948cd
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
          name: server
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies-spa
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: lobbies-spa
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: lobbies-spa-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: lobbies-spa
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /lobbies
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players
spec:
  selector:
    matchLabels:
      app: players
  template:
    metadata:
      labels:
        app: players
    spec:
      containers:
        - env:
            - name: HOST_PREFIX
              value: /api/players
            - name: REDIS_HOST
              value: players-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: players-redis
          image: ghcr.io/deesejohn/players:d5bac55@sha256:1c702004756bd910fa3dda72fdde89fc82cb34cc1e6de67ae382f249bc307d5b
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
          name: server
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: players
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: players
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: players-api-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: players
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /api/players/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players-spa
spec:
  selector:
    matchLabels:
      app: players-spa
  template:
    metadata:
      labels:
        app: players-spa
    spec:
      containers:
        - image: ghcr.io/deesejohn/players-spa:d5bac55@sha256:a08ab9961dbb7c472f6c3419e712efac8e99398c4b0031c71750005e41fe0d9a
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
          name: server
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: players-spa
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: players-spa
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: players-spa-route
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - name: players-spa
          port: 80
      filters:
        - type: URLRewrite
          urlRewrite:
            path:
              replacePrefixMatch: /
              type: ReplacePrefixMatch
      matches:
        - path:
            type: PathPrefix
            value: /players
