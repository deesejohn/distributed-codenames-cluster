apiVersion: getambassador.io/v3alpha1
kind: Listener
metadata:
  name: emissary-ingress-listener-8080
  namespace: emissary
spec:
  hostBinding:
    namespace:
      from: ALL
  port: 8080
  protocol: HTTP
  securityModel: XFP
---
apiVersion: getambassador.io/v3alpha1
kind: Host
metadata:
  name: default-host
spec:
  hostname: '*'
  mappingSelector:
    matchLabels:
      defaulthost: host
  requestPolicy:
    insecure:
      action: Route
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: root-mapping
spec:
  prefix: /
  prefix_redirect: /lobbies
  service: lobbies-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games
spec:
  selector:
    matchLabels:
      app: games
  template:
    metadata:
      labels:
        app: games
    spec:
      containers:
      - env:
        - name: NATS_HOST
          value: my-nats
        - name: REDIS_HOST
          value: games-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: games-redis
        - name: WORDS_ADDRESS
          value: words:50051
        image: ghcr.io/deesejohn/games:0afed3a@sha256:3eeecaa2098394bd9b64ef4dd7a2e3d7ac9a567fcf623adf9608b8addb4a4d64
        livenessProbe:
          grpc:
            port: 50051
        name: server
        ports:
        - containerPort: 50051
---
apiVersion: v1
kind: Service
metadata:
  name: games
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: games
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-bff
spec:
  selector:
    matchLabels:
      app: games-bff
  template:
    metadata:
      labels:
        app: games-bff
    spec:
      containers:
      - env:
        - name: GAMES_HOST
          value: games:50051
        - name: HOST_PREFIX
          value: /api/games
        - name: NATS_HOST
          value: my-nats
        image: ghcr.io/deesejohn/games-bff:0afed3a@sha256:126d0365c154409fd66b1b8a560a790e82693324179a0fff17ea4906fcbb298b
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 5
        name: server
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: games-bff
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: games-bff
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: games-bff-mapping
spec:
  allow_upgrade:
  - websocket
  prefix: /api/games/
  service: games-bff

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-spa
spec:
  selector:
    matchLabels:
      app: games-spa
  template:
    metadata:
      labels:
        app: games-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/games-spa:0afed3a@sha256:eb58336e7bc5e905ffad9a2340c622613709dc3c29983ad1fffb888a6b81b402
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
        name: server
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: games-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: games-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: games-spa-mapping
spec:
  prefix: /games
  service: games-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies
spec:
  selector:
    matchLabels:
      app: lobbies
  template:
    metadata:
      labels:
        app: lobbies
    spec:
      containers:
      - env:
        - name: ASPNETCORE_FORWARDEDHEADERS_ENABLED
          value: "true"
        - name: GAMES_HOST
          value: http://games:50051
        - name: HOST_PREFIX
          value: /api/lobbies
        - name: PLAYERS_HOST
          value: http://players
        - name: REDIS_HOST
          value: lobbies-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: lobbies-redis
        image: ghcr.io/deesejohn/lobbies:0afed3a@sha256:57ae289077f06d65a96d658c92cb41f7669d8fd95897b7365fc7a2dfb7d09101
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: lobbies
  type: ClusterIP
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: lobbies-mapping
spec:
  allow_upgrade:
  - websocket
  prefix: /api/lobbies/
  service: lobbies

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies-spa
spec:
  selector:
    matchLabels:
      app: lobbies-spa
  template:
    metadata:
      labels:
        app: lobbies-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/lobbies-spa:0afed3a@sha256:1afad76d5db70994dacb0de32496d9fabfdafb3abec707f5b19097324d3cca2f
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
        name: server
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: lobbies-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: lobbies-spa-mapping
spec:
  prefix: /lobbies
  service: lobbies-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players
spec:
  selector:
    matchLabels:
      app: players
  template:
    metadata:
      labels:
        app: players
    spec:
      containers:
      - env:
        - name: HOST_PREFIX
          value: /api/players
        - name: REDIS_HOST
          value: players-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: players-redis
        image: ghcr.io/deesejohn/players:0afed3a@sha256:26ec01d96b54ce07195a30391afc7797eef90412c3d0dd6dc7731380c05b2370
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: players
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: players
  type: ClusterIP
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: players-mapping
spec:
  prefix: /api/players/
  service: players

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players-spa
spec:
  selector:
    matchLabels:
      app: players-spa
  template:
    metadata:
      labels:
        app: players-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/players-spa:0afed3a@sha256:7724587fa9769509c2e5850e7837af7ff9869c3754f397187e958a54b45d93a3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
        name: server
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: players-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: players-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  labels:
    defaulthost: host
  name: players-spa-mapping
spec:
  prefix: /players
  service: players-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: words
spec:
  selector:
    matchLabels:
      app: words
  template:
    metadata:
      labels:
        app: words
    spec:
      containers:
      - image: ghcr.io/deesejohn/words:0afed3a@sha256:3f6d2e376cca0a46923a766794c04e0991e2e8c43f2e680800bf1c8e26270935
        livenessProbe:
          grpc:
            port: 50051
        name: server
        ports:
        - containerPort: 50051
---
apiVersion: v1
kind: Service
metadata:
  name: words
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: words
  type: ClusterIP
