apiVersion: apps/v1
kind: Deployment
metadata:
  name: games
spec:
  selector:
    matchLabels:
      app: games
  template:
    metadata:
      labels:
        app: games
    spec:
      containers:
      - env:
        - name: NATS_HOST
          value: my-nats
        - name: REDIS_HOST
          value: games-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: games-redis
        - name: WORDS_ADDRESS
          value: words:50051
        image: ghcr.io/deesejohn/games:628e0c2@sha256:e606020966927ee0825d9e17a2497c2e95fb5909545999634d3b1ba297d4aad2
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          initialDelaySeconds: 10
        name: server
        ports:
        - containerPort: 50051
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: games
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: games
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-bff
spec:
  selector:
    matchLabels:
      app: games-bff
  template:
    metadata:
      labels:
        app: games-bff
    spec:
      containers:
      - env:
        - name: GAMES_HOST
          value: games:50051
        - name: HOST_PREFIX
          value: /api/games
        - name: NATS_HOST
          value: my-nats
        image: ghcr.io/deesejohn/games-bff:628e0c2@sha256:0761d50e6466da832b7267bcf7c585d834747eef7386aa96ea3163b6477585b2
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 5
        name: server
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: games-bff
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: games-bff
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: games-bff-mapping
spec:
  allow_upgrade:
  - websocket
  prefix: /api/games/
  service: games-bff

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: games-spa
spec:
  selector:
    matchLabels:
      app: games-spa
  template:
    metadata:
      labels:
        app: games-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/games-spa:628e0c2@sha256:37230800faed0970420e53d0f4e984240133aef9114017acdc8f4217b73a13c4
        name: server
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: games-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: games-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: games-spa-mapping
spec:
  prefix: /games
  service: games-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies
spec:
  selector:
    matchLabels:
      app: lobbies
  template:
    metadata:
      labels:
        app: lobbies
    spec:
      containers:
      - env:
        - name: ASPNETCORE_FORWARDEDHEADERS_ENABLED
          value: "true"
        - name: GAMES_HOST
          value: http://games:50051
        - name: HOST_PREFIX
          value: /api/lobbies
        - name: PLAYERS_HOST
          value: http://players
        - name: REDIS_HOST
          value: lobbies-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: lobbies-redis
        image: ghcr.io/deesejohn/lobbies:628e0c2@sha256:8d3038b8e1c3ecac6b556fa4cd7a7b6e8245094af920eacd5c554bace38ec620
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
          initialDelaySeconds: 5
        name: server
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: lobbies
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: lobbies-mapping
spec:
  allow_upgrade:
  - websocket
  prefix: /api/lobbies/
  service: lobbies

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lobbies-spa
spec:
  selector:
    matchLabels:
      app: lobbies-spa
  template:
    metadata:
      labels:
        app: lobbies-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/lobbies-spa:628e0c2@sha256:c9b06cc62d6c83bf2881dd9e70d9f05a3f6d0bdaabfd4c4bd68a3e08f24c8c44
        name: server
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: lobbies-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: lobbies-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: lobbies-spa-mapping
spec:
  prefix: /lobbies
  service: lobbies-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players
spec:
  selector:
    matchLabels:
      app: players
  template:
    metadata:
      labels:
        app: players
    spec:
      containers:
      - env:
        - name: HOST_PREFIX
          value: /api/players
        - name: REDIS_HOST
          value: players-redis-master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: players-redis
        image: ghcr.io/deesejohn/players:628e0c2@sha256:b34a5b19ac4b7a1f04fc1443d6dca66d04cb3454224286e7f09c34de7463f5e8
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
          initialDelaySeconds: 5
        name: server
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: players
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: players
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: players-mapping
spec:
  prefix: /api/players/
  service: players

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: players-spa
spec:
  selector:
    matchLabels:
      app: players-spa
  template:
    metadata:
      labels:
        app: players-spa
    spec:
      containers:
      - image: ghcr.io/deesejohn/players-spa:628e0c2@sha256:c62aa50d451eca8f084e284f4d59d905657048784a817832a17a06eaf0c8c9a5
        name: server
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: players-spa
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: players-spa
  type: ClusterIP
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: players-spa-mapping
spec:
  prefix: /players
  service: players-spa

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: words
spec:
  selector:
    matchLabels:
      app: words
  template:
    metadata:
      labels:
        app: words
    spec:
      containers:
      - image: ghcr.io/deesejohn/words:628e0c2@sha256:8e1a25b13a7da9f79262dc3bf16d2d48acd1675a4da2e35247055d43be154a82
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          initialDelaySeconds: 10
        name: server
        ports:
        - containerPort: 50051
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:50051
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: words
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: words
  type: ClusterIP

---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: root-mapping
spec:
  prefix: /
  prefix_redirect: /lobbies
  service: lobbies-spa
